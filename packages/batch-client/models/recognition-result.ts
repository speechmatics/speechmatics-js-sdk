/* tslint:disable */
/* eslint-disable */
/**
 * Speechmatics ASR REST API
 * The Speechmatics Automatic Speech Recognition REST API is used to submit ASR jobs and receive the results. The supported job type is transcription of audio files.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@speechmatics.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// May contain unused imports in some cases
// @ts-ignore
import type { RecognitionAlternative } from './recognition-alternative';
// May contain unused imports in some cases
// @ts-ignore
import type { SpokenFormRecognitionResult } from './spoken-form-recognition-result';
// May contain unused imports in some cases
// @ts-ignore
import type { WrittenFormRecognitionResult } from './written-form-recognition-result';

/**
 * An ASR job output item. The primary item types are `word` and `punctuation`. Other item types may be present, for example to provide semantic information of different forms.
 * @export
 * @interface RecognitionResult
 */
export interface RecognitionResult {
  /**
   *
   * @type {string}
   * @memberof RecognitionResult
   */
  channel?: string;
  /**
   *
   * @type {number}
   * @memberof RecognitionResult
   */
  start_time: number;
  /**
   *
   * @type {number}
   * @memberof RecognitionResult
   */
  end_time: number;
  /**
   * An indication of the volume of audio across the time period the word was spoken.
   * @type {number}
   * @memberof RecognitionResult
   */
  volume?: number;
  /**
   * Whether the punctuation mark is an end of sentence character. Only applies to punctuation marks.
   * @type {boolean}
   * @memberof RecognitionResult
   */
  is_eos?: boolean;
  /**
   * New types of items may appear without being requested; unrecognized item types can be ignored.
   * @type {string}
   * @memberof RecognitionResult
   */
  type: RecognitionResultTypeEnum;
  /**
   *
   * @type {WrittenFormRecognitionResult}
   * @memberof RecognitionResult
   */
  written_form?: WrittenFormRecognitionResult;
  /**
   *
   * @type {SpokenFormRecognitionResult}
   * @memberof RecognitionResult
   */
  spoken_form?: SpokenFormRecognitionResult;
  /**
   *
   * @type {Array<RecognitionAlternative>}
   * @memberof RecognitionResult
   */
  alternatives?: Array<RecognitionAlternative>;
}

export const RecognitionResultTypeEnum = {
  Word: 'word',
  Punctuation: 'punctuation',
  SpeakerChange: 'speaker_change',
  Entity: 'entity',
} as const;

export type RecognitionResultTypeEnum =
  (typeof RecognitionResultTypeEnum)[keyof typeof RecognitionResultTypeEnum];
